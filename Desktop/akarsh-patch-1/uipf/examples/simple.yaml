
# first processing step with name "sourceImage"
# using the module "loadImage" which is able to read an image file and provides one output
# it has the parameter filename which refers to the file that it should read
sourceImage:
  module: loadImage
  filename: ../../testdata/Vintage-Tree-Nature-Background-HD-Wallpaper.jpg
# uncomment the following to load the image as grayscale
#  mode: grayscale

# second step's name is "process", step names are unique btw.
# here the module "gaussian" is used, which has a paramter kernelSize
# the gaussian module has an input named "image" which is of type Image
# and is configured to take the value of the "image" output of the
# sourceImage module configured above.
process:
  module: gaussian
  windowSize: 5
  sigmaX: 10.5
  input:
    image: sourceImage.image

# the last step in the chain is named "output" and uses the storeImage module
# which saves the input into a file
output:
  module: storeImage
  input:
    image: process.image
  filename: output.jPeg
  quality: 30

showProcessed:
  module: showImage
  title: "processed nice image"
  blocking: false
  input:
    image: process.image

#shows an image in a window
showUnprocessed:
  module: showImage
  title: "nice image"
  blocking: true
  input:
    image: sourceImage.image



